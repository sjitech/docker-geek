#!/bin/bash
set -o errexit -o pipefail

function show_usage() {
  >&2 echo "Bind-mount a dir or file, among containers and host"
  >&2 echo ""
  >&2 echo "Usage:"
  >&2 echo "  ${0##*/} [OPTIONS] [CONTAINER:]SOURCE_PATH [CONTAINER:]TARGET_PATH"
  >&2 echo ""
  >&2 echo "OPTIONS:"
  >&2 echo "  -r, --readonly                       Mount as read-only"
  >&2 echo ""
  >&2 echo "CONTAINER:"
  >&2 echo "  Source and target container id or name."
  >&2 echo "  If not specified, it will use current container or host."
  >&2 echo ""
  >&2 echo "SOURCE_PATH, TARGET_PATH:"
  >&2 echo "  Source and target mount point, can be a dir or file. Must start with /"
  >&2 echo ""
  exit 1
}

OPT_READONLY=""; SOURCE_ID=""; SOURCE_PATH=""; TARGET_ID=""; TARGET_PATH=""

while [[ $# -gt 0 ]]; do
  case $1 in
  -r|--readonly)
      OPT_READONLY=$1
      ;;
  -*)
      show_usage
      ;;

  *:/*)
      if [[ ! $SOURCE_PATH ]]; then
        SOURCE_PATH=${1#*:}
        SOURCE_ID=${1%%:*}
      elif [[ ! $TARGET_PATH ]]; then
        TARGET_PATH=${1#*:}
        [[ $TARGET_PATH == / ]] && { >&2 echo "${0##*/}: target mount point must not be root dir"; exit 1; }
        TARGET_ID=${1%%:*}
        [[ ! $TARGET_ID ]] && show_usage
      else
        show_usage
      fi
      ;;
  /*)
      if [[ ! $SOURCE_PATH ]]; then
        SOURCE_PATH=$1
      elif [[ ! $TARGET_PATH ]]; then
        TARGET_PATH=$1
        [[ $TARGET_PATH == / ]] && { >&2 echo "${0##*/}: target mount point must not be root dir"; exit 1; }
      else
        show_usage
      fi
      ;;
  *)
      show_usage
      ;;
  esac
  shift
done

[[ ! $SOURCE_PATH || ! $TARGET_PATH ]] && show_usage

# todo: get current container if ID is not specified
# todo: call bind-mount directly when in host
# todo: check in docker-geek

#[[ -f /usr/local/bin/bind-mount ]]

SOURCE_ROOTFS=""; [[ $SOURCE_ID ]] && SOURCE_ROOTFS=$(docker-rootfs-of-container "$SOURCE_ID")
TARGET_ROOTFS=""; [[ $TARGET_ID ]] && TARGET_ROOTFS=$(docker-rootfs-of-container "$TARGET_ID")

[[ ! $SOURCE_ROOTFS && $SOURCE_PATH != /var/lib/docker/* ]] && SOURCE_ROOTFS=/host-rootfs
[[ ! $TARGET_ROOTFS && $TARGET_PATH != /var/lib/docker/* ]] && TARGET_ROOTFS=/host-rootfs

# Notes:
# - The -v /var/lib/docker:/var/lib/docker:rshared is for bind-mounting across containers later
# - The --network=host --ipc=host --uts=host are optional, just for launching container faster
# - The -v "$SOURCE_ROOTFS$SOURCE_PATH":/x:ro is for readonly mount

COM_CMD=(exec docker run --rm \
    --privileged --userns=host \
    --pid=host --network=host --ipc=host --uts=host \
    -v /var/lib/docker:/var/lib/docker:rshared \
    -v /:/host-rootfs)

if [[ $OPT_READONLY ]]; then
  "${COM_CMD[@]}" \
    -v "$SOURCE_ROOTFS$SOURCE_PATH":/readonly:ro \
    osexp2000/bind-mount /readonly "$TARGET_ROOTFS$TARGET_PATH"
else
  "${COM_CMD[@]}" \
    osexp2000/bind-mount "$SOURCE_ROOTFS$SOURCE_PATH" "$TARGET_ROOTFS$TARGET_PATH"
fi
