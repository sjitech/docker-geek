#!/bin/bash
set -o errexit -o pipefail

function show_usage() {
    >&2 echo "Persistently mount a Windows or SAMBA shared folder to /mnt/<IP>/<SHARE_PATH>"
    >&2 echo ""
    >&2 echo "Usage:"
    >&2 echo "  ${0##*/} SHARE_UNC USER DOMAIN"
    >&2 echo ""
    >&2 echo "SHARE_UNC:"
    >&2 echo "  //IP/SHARE_NAME or //IP:PORT/SHARE_NAME"
    >&2 echo ""
    >&2 echo "Note:"
    >&2 echo "  you will be prompted to input password"
    >&2 echo ""
    >&2 echo "Example:"
    >&2 echo "  - ${0##*/} //192.168.1.2/share user domain"
    >&2 echo ""
    exit 1
}

[[ ! $1 || $1 == --help ]] && show_usage
[[ $1 =~ //.*/.*$ ]] || show_usage
[[ $2 ]] || show_usage

MOUNT_POINT=/mnt/${1#//}"

if [[ $IS_DOCKER_GEEK ]]; then
    mkdir -p "$MOUNT_POINT"
    mount -t cifs "$1" "$MOUNT_POINT" -o user="$2",dom="$3"
else
    # Enter host namespace to do mount. The reason use nsenter-dockerd is that
    # it definitely contains proper mount util and sh related stuff.
    #
    # Notes:
    # - The --network=host --ipc=host --uts=host are optional, just for launching container faster

    docker run --rm -it \
        --privileged --userns=host \
        --pid=host --network=host --ipc=host --uts=host \
        -v /var/run/docker.pid:/var/run/docker.pid \
        osexp2000/nsenter-dockerd sh -c \
            'mkdir -p "$1" && mount -t cifs "$2" "$1" -o user="$3",dom="$4"' \
                -- "$MOUNT_POINT" "$@"
fi

>&2 echo mounted at "$MOUNT_POINT"
