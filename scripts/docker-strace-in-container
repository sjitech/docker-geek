#!/bin/bash
set -o errexit -o pipefail

[[ ! $IS_DOCKER_GEEK ]] && exec docker-geek --interactive --tty "${0##*/}" "$@"

function show_usage() {
  >&2 echo "Run a program in a container and trace its syscalls."
  >&2 echo ""
  >&2 echo "Usage:"
  >&2 echo "  ${0##*/} [OPTS] CONTAINER_ID_OR_NAME COMMAND [ARGS...]"
  >&2 echo ""
  >&2 echo "OPTS"
  >&2 echo "  To see available options, run:"
  >&2 echo "    ${0##*/} -h"
  >&2 echo "  Please join option indicator and value into a whole one to avoid space. E.g.,"
  >&2 echo "    -e trace=file  ->  -etrace=file"
  >&2 echo "    -P path        ->  -Ppath"
  >&2 echo ""
  exit 1
}

OPTS=()

while [[ $# > 0 ]]; do
  case $1 in
  --help)
    show_usage
    ;;
  -*)
    OPTS+=("$1")
    ;;
  *)
    break
    ;;
  esac
  shift
done

ID=${1:?${0##*/}: require next argument as an id or name of an container}; shift

[[ $# == 0 ]] && show_usage

PID=$(docker-pid-of-container "$ID")

exec strace "${OPTS[@]}" -f nsenter --target=$PID --all -- "$@"
