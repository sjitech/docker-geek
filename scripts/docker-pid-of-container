#!/bin/bash
set -o errexit -o pipefail

function show_usage() {
    >&2 echo "Show init process id of a container."
    >&2 echo ""
    >&2 echo "Usage:"
    >&2 echo "  ${0##*/} [CONTAINER_ID_OR_NAME]"
    >&2 echo ""
    >&2 echo "Note:"
    >&2 echo "  - If CONTAINER_ID_OR_NAME is omitted, it reads each line from input, echo it,"
    >&2 echo "    grep out an 12 or 64 chars lowercase hex id, if found then process the id"
    >&2 echo "    and show result with '  pid: ' prepended."
    >&2 echo ""
    >&2 echo "Example:"
    >&2 echo "  - ${0##*/} 17d09873c8a5"
    >&2 echo "  - docker ps | ${0##*/}"
    >&2 echo ""
    exit 1
}

ID=""

while [[ $# -gt 0 ]]; do
    case $1 in
    -*)
            show_usage
            ;;
    *)
            ID=$1
            ;;
    esac
    shift
done

if [[ $ID ]]; then
    PID=$(docker container inspect -f '{{.State.Pid}}' "$ID")
    if [[ $PID == 0 ]]; then
        >&2 echo "${0##*/}: the container '$ID' is not running"
        exit 1
    fi
    echo $PID
else
    while IFS='' read -r line; do
        echo "$line"
        [[ $line =~ ^"  "[a-z]+:$ ]] && continue
        ID=""
        read -a a <<<"$line"
        for x in "${a[@]}"; do
            [[ $x =~ ^[0-9a-f]{12}$ || $x =~ ^[0-9a-f]{64}$ ]] && ID=$x && break
        done
        if [[ $ID ]] && PID=$(docker container inspect -f '{{.State.Pid}}' "$ID" 2>/dev/null) && [[ $PID != 0 ]]; then
            echo "  pid: $PID"
        fi
    done
fi
