#!/bin/bash
set -o errexit -o pipefail

function show_usage() {
  >&2 echo "Run a command or sh on behalf of the init process."
  >&2 echo ""
  >&2 echo "Usage:"
  if [[ $IS_DOCKER_GEEK ]]; then
    >&2 echo "  ${0##*/} [CMD [ARGS...]]"
  else
    >&2 echo "  ${0##*/} [OPTIONS] [CMD [ARGS...]]"
    >&2 echo ""
    >&2 echo "OPTIONS:"
    >&2 echo "  -i, --interactive                    Keep STDIN open even if not attached"
    >&2 echo "  -t, --tty                            Allocate a pseudo-TTY"
  fi
  >&2 echo ""
  >&2 echo "Note:"
  if [[ $IS_DOCKER_GEEK ]]; then
    >&2 echo "  - If no any argument specified, it will run an interactive /bin/sh."
  else
    >&2 echo "  - If no any argument specified, it will run an interactive /bin/sh (implies '-i' and '-t')."
  fi
  >&2 echo ""
  exit 1
}

OPT_INTERACTIVE=""; OPT_TTY=""

while [[ $# -gt 0 ]]; do
  case $1 in
  -i|--interactive)
      OPT_INTERACTIVE=$1
      ;;
  -t|--tty)
      OPT_TTY=$1
      ;;
  --*)
      show_usage
      ;;
  -*i*|-*t*)
      [[ $1 == *i* ]] && OPT_INTERACTIVE=-i
      [[ $1 == *t* ]] && OPT_TTY=-t
      [[ ! $1 =~ ^-[it]+$ ]] && show_usage
      ;;
  -*)
      show_usage
      ;;
  *)
      break
      ;;
  esac
  shift
done

if [[ $# == 0 && ! $OPT_INTERACTIVE && ! $OPT_TTY ]]; then
  OPT_INTERACTIVE=-i
  OPT_TTY=-t
fi

if [[ $IS_DOCKER_GEEK ]]; then
  SHELL=/bin/sh exec nsenter --target 1 --all -- "$@"
fi

# Notes:
# - The --network=host --ipc=host --uts=host are optional, just for launching container faster

exec docker run --rm $OPT_INTERACTIVE $OPT_TTY \
  --privileged --userns=host \
  --pid=host --network=host --ipc=host --uts=host \
  osexp2000/nsenter --target=1 --all -- "$@"
