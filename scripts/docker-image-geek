#!/bin/bash
set -o errexit -o pipefail

function show_usage() {
  >&2 echo "Start a docker-geek in which mount an image to /rootfs (as readonly by default)."
  >&2 echo ""
  >&2 echo "Usage:"
  >&2 echo "  ${0##*/} [OPTIONS] IMAGE_ID_OR_NAME [COMMAND [ARGS...]]"
  >&2 echo ""
  >&2 echo "OPTIONS:"
  >&2 echo "  -w, --writeable                      Mount as writable"
  >&2 echo ""
  >&2 echo "Note:"
  >&2 echo "  - If no any argument specified, it will run an interactive /bin/bash."
  >&2 echo "  - You can pass extra docker run option via env var DOCKER_GEEK_OPTION"
  >&2 echo "  - You can specify an container's id or name as IMAGE_ID_OR_NAME."
  >&2 echo ""
  exit 1
}

OPT_WRITABLE="";

while [[ $# > 0 ]]; do
  case $1 in
  -w|--writable)
    OPT_WRITABLE=$1
    ;;
  -*)
    show_usage
    ;;
  *)
    break
    ;;
  esac
  shift
done

ID=${1:?${0##*/}: require next argument as an id or name of an image}; shift

LAYERS=($(docker-layers-of "$ID")); LAYERS=${LAYERS[*]}; LAYERS=${LAYERS// /:}

[[ ! $ID =~ ^[0-9a-f]{12}$ && ! $ID =~ ^[0-9a-f]{64}$ ]] && ID=$(docker inspect -f '{{.ID}}' "$ID")
ID=${ID#sha256:}

[[ $# == 0 ]] && set -- bash -l

export DOCKER_GEEK_NETWORK_OPTION="--network=host --hostname=GEEK-${ID:0:12} --add-host GEEK-${ID:0:12}:127.0.0.1"
exec docker-geek sh -c \
  "mount-overlay $OPT_WRITABLE $LAYERS /rootfs && cd /rootfs && exec \"\$@\"" \
    -- "$@"
