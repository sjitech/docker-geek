#!/bin/bash
set -o errexit -o pipefail

function show_usage() {
  >&2 echo "Start a docker-geek in which mount a container to /rootfs and switch to its network namespace."
  >&2 echo ""
  >&2 echo "Usage:"
  >&2 echo "  ${0##*/} CONTAINER_ID_OR_NAME [COMMAND [ARGS...]]"
  >&2 echo ""
  >&2 echo "Note:"
  >&2 echo "  - If no any argument specified, it will run an interactive /bin/bash."
  >&2 echo "  - You can pass extra docker run option via env var DOCKER_GEEK_OPTION"
  >&2 echo ""
  exit 1
}

while [[ $# > 0 ]]; do
  case $1 in
  -*)
    show_usage
    ;;
  *)
    break
    ;;
  esac
  shift
done

ID=${1:?${0##*/}: require next argument as an id or name of an container}; shift

if ! PID=$(docker-pid-of-container "$ID"); then
  exec docker-image-geek "$ID" "$@"
fi

ROOTFS=$(docker-rootfs-of-container "$ID")

[[ ! $ID =~ ^[0-9a-f]{12}$ && ! $ID =~ ^[0-9a-f]{64}$ ]] && ID=$(docker container inspect -f '{{.ID}}' "$ID")

[[ $# == 0 ]] && set -- bash -l

export DOCKER_GEEK_NETWORK_OPTION="--network=container:$ID"
export DOCKER_GEEK_OPTION="$DOCKER_GEEK_OPTION -v $ROOTFS:/rootfs.no_sub_mounts"
exec docker-geek sh -c \
  "ln -s /proc/$PID/root /rootfs && cd /rootfs && exec \"\$@\"" \
    -- "$@"
