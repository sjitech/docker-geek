#!/bin/bash
set -o errexit -o pipefail

function show_usage() {
    >&2 echo "Unmount a dir in host or a running container."
    >&2 echo ""
    >&2 echo "Usage:"
    >&2 echo "  ${0##*/} MOUNT_POINT"
    >&2 echo "  ${0##*/} CONTAINER_ID_OR_NAME MOUNT_POINT"
    >&2 echo "  ${0##*/} CONTAINER_ID_OR_NAME:MOUNT_POINT"
    >&2 echo ""
    >&2 echo "MOUNT_POINT:"
    >&2 echo "  The mounted dir"
    >&2 echo ""
    exit 1
}

[[ ! $1 || $1 == --help ]] && show_usage

if [[ $2 ]]; then
    ID=$1
    MOUNT_POINT=$2
elif [[ $1 == *:* ]]; then
    ID=${1%%:*}
    MOUNT_POINT=${1#*:}
else
    ID=""
    MOUNT_POINT=$1
fi

[[ $MOUNT_POINT != /* ]] && { >&2 echo "${0##*/}: mount point must start with /"; exit 1; }

ROOTFS=""; [[ $ID ]] && ROOTFS=$(docker-rootfs-of-container "$ID")

[[ $IS_DOCKER_GEEK ]] && exec umount "$ROOTFS$MOUNT_POINT"

# Enter host namespace to do umount. The reason use nsenter-dockerd is that
# it definitely contains proper umount util.
#
# Notes:
# - The --network=host --ipc=host --uts=host are optional, just for launching container faster

#todo -1 just umount one time, otherwise repeat umount until failure,
#todo support --all

exec docker run --rm \
    --privileged --userns=host \
    --pid=host --network=host --ipc=host --uts=host \
    -v /var/run/docker.pid:/var/run/docker.pid \
    osexp2000/nsenter-dockerd umount "$ROOTFS$MOUNT_POINT"
